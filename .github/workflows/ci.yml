name: CI

on:
  push:
    branches: 
      - '*'
      - '!main'

env:
  BUILD_TYPE: Debug
  LINTERS_FLAGS_ON: -DENABLE_CLANG_TIDY=ON -DENABLE_CPPLINT=ON -DENABLE_CPPCHECK=ON
  LINTERS_FLAGS_OFF: -DENABLE_CLANG_TIDY=OFF -DENABLE_CPPLINT=OFF -DENABLE_CPPCHECK=OFF
  TEST_FLAGS_ON: -DENABLE_TEST=ON -DENABLE_SANITIZER=ON
  TEST_FLAGS_OFF: -DENABLE_TEST=OFF -DENABLE_SANITIZER=OFF
  BACK_FRONT_ON: -DENABLE_BACKEND=ON -DENABLE_FRONTEND=ON



jobs:
  build-with-linters:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install cppcheck
      run: sudo apt-get install -y cppcheck

    - name: Install clang-tidy
      run: sudo apt-get install -y clang-tidy

    - name: Install python
      uses: actions/setup-python@v4

    - name: Install cpplint
      run: sudo pip install cpplint

    - name: Configure cmake
      run: |
        cmake -B ${{ github.workflow }}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
        ${{ env.LINTERS_FLAGS_ON }} ${{ env.TEST_FLAGS_OFF }} ${{ env.BACK_FRONT_ON }}
        cd ${{ github.workflow }}
        ls

    - name: Build with linters
      id: build-with-linters-step
      uses: selfagency/capture-output@v1
      with:
        cmd: cmake
        args: --build, ${{ github.workflow }}/build
        file: ${{ github.workflow }}/build_output.txt

    - name: Save results to PR comment
      uses: mshick/add-pr-comment@v2
      with:
        message: |
          ## Results of build with clang-tidy, cpplint, cppcheck
          ```
          cat ${{ github.workflow }}/build_output.txt
          ```
    - name: Save build results to artifact
      uses: actions/upload-artifact@v3
      with:
        name: Results of build with clang-tidy, cpplint, cppcheck
        path: ${{ github.workflow }}/build_output.txt

  tests:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [ build-with-linters ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure cmake
      run: | 
        cmake -B ${{ github.workflow }}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
        ${{ env.LINTERS_FLAGS_OFF }} ${{ env.TEST_FLAGS_ON }} ${{ env.BACK_FRONT_ON }}

    - name: Build
      run: cmake --build ${{ github.workflow }}/build

    - name: Run tests
      id: run-tests
      uses: selfagency/capture-output@v1
      with:
        cmd: ${{ github.workflow }}/build/tests/run_tests.sh
        file: ${{ github.workflow }}/tests_output.txt

    - name: Save results to PR comment
      uses: mshick/add-pr-comment@v2
      with:
        message: |
          ## Tests Results
          ```
          cat ${{ github.workflow }}/tests_output.txt
          ```

    - name: Save build results to artifact
      uses: actions/upload-artifact@v3
      with:
        name: Tests Results
        path: ${{ github.workflow }}/tests_output.txt

Checks: >
  -*,
  abseil-*,
  bugprone-*,
  boost*,
  google-*,
  readability-*,
  performance-*,
  misc-*,
  modernize-*,
  performance-*,
  -google-build-using-namespace,
  -google-runtime-references,
  -misc-non-private-member-variables-in-classes,
  -modernize-return-braced-init-list,
  -modernize-use-trailing-return-type,
  -modernize-avoid-c-arrays,
  -readability-identifier-length,
  -readability-magic-numbers,
  -readability-named-parameter

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,          value: lower_case }
  - { key: readability-identifier-naming.ClassCase,              value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,             value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase,  value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,           value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,           value: camelBack }
  - { key: readability-identifier-naming.ClassMemberCase,        value: camelBack }
  - { key: readability-identifier-naming.PrivateMemberCase,      value: camelBack }
  - { key: readability-identifier-naming.ClassMemberPrefix,      value: m_         }
  - { key: readability-identifier-naming.PrivateMemberPrefix,    value: m_         }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,  value: m_         }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantPrefix,       value: k         }
  - { key: readability-identifier-naming.ConstexprVariableCase,    value: CamelCase }
  - { key: readability-identifier-naming.ConstexprVariablePrefix,  value: k         }
  - { key: readability-identifier-naming.GlobalConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantPrefix,     value: k         }
  - { key: readability-identifier-naming.MemberConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.MemberConstantPrefix,     value: k         }
  - { key: readability-identifier-naming.StaticConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.StaticConstantPrefix,     value: k         }
  - { key: readability-implicit-bool-conversion.AllowIntegerConditions,  value: 1   }
  - { key: readability-implicit-bool-conversion.AllowPointerConditions,  value: 1   }
  - { key: readability-function-cognitive-complexity.IgnoreMacros,  value: 1    }
  - { key: readability-function-cognitive-complexity.Threshold,     value: 40   }

  # Should be excluded in future
  # to fix error with c++20 : invalid case style for template parameter 'expr-type' 
  # There is no error with c++17 or older. It is most probably a bug, for more inforemation 
  # look at https://stackoverflow.com/questions/68475958/clang-tidy-emits-warning-when-compiling-with-c20-enabled
  - {key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp, value: expr-type}
  